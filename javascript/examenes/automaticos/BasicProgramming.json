[{"id":"q1","question":"¿Cuál de las siguientes estructuras de control permite que un bloque de código se ejecute repetidamente mientras una condición sea verdadera?","options":["a) Condicional (if-else)","b) Ciclo (loop)","c) Función","d) Variable"],"answer":"b","explanation":"Un ciclo, también conocido como bucle o loop, es una estructura de control que se utiliza para ejecutar un bloque de código repetidamente hasta que se cumpla una condición específica o se itere sobre una secuencia de elementos. Esto es fundamental para automatizar tareas repetitivas en programación.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Una estructura condicional (if-else) ejecuta un bloque de código solo una vez si una condición es verdadera, o un bloque alternativo si es falsa. No se repite.","c":"Una función es un bloque de código reusable que realiza una tarea específica, pero no implica repetición automática a menos que sea llamada repetidamente o contenga un ciclo internamente.","d":"Una variable es un contenedor para almacenar datos, no una estructura de control que determine la ejecución de código."}},{"id":"q2","question":"Si quieres que un programa tome una decisión y ejecute un código diferente dependiendo de si una condición es verdadera o falsa, ¿qué tipo de estructura de control usarías?","options":["a) Un ciclo 'for'","b) Una condicional 'if-else'","c) Un ciclo 'while'","d) Una declaración de impresión"],"answer":"b","explanation":"La estructura condicional 'if-else' es ideal para tomar decisiones. Evalúa una condición: si es verdadera, ejecuta el bloque de código dentro del 'if'; si es falsa, ejecuta el bloque de código dentro del 'else' (si existe). Permite que el flujo del programa se ramifique basado en condiciones.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Un ciclo 'for' se usa para repetir un bloque de código un número determinado de veces o para iterar sobre una secuencia, no para tomar decisiones de 'o esto o aquello'.","c":"Un ciclo 'while' se usa para repetir un bloque de código mientras una condición sea verdadera, lo cual es diferente a tomar una decisión única sobre qué bloque ejecutar.","d":"Una declaración de impresión (por ejemplo, 'print()') simplemente muestra información en la salida, no controla el flujo de ejecución del programa ni toma decisiones."}},{"id":"q3","question":"¿Cuál es la función principal de un ciclo en programación?","options":["a) Almacenar datos temporalmente.","b) Ejecutar una parte del código solo si se cumple una condición.","c) Repetir un conjunto de instrucciones múltiples veces.","d) Definir la interfaz gráfica de usuario."],"answer":"c","explanation":"La función principal de un ciclo (como 'for' o 'while') es automatizar la repetición de un bloque de código. Esto es esencial cuando necesitas realizar la misma operación varias veces sin escribir el mismo código una y otra vez.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Almacenar datos temporalmente es la función de las variables, no de los ciclos.","b":"Ejecutar una parte del código solo si se cumple una condición es la función de una estructura condicional (como 'if-else'), no de un ciclo.","d":"Definir la interfaz gráfica de usuario (GUI) se realiza con librerías y frameworks específicos para GUI, no es la función principal de los ciclos."}},{"id":"q4","question":"En una estructura condicional 'if-else', si la condición del 'if' es falsa, ¿qué sucede?","options":["a) El código dentro del 'if' se ejecuta de todas formas.","b) El programa se detiene.","c) Se ejecuta el código dentro del 'else' (si existe).","d) El programa ignora toda la estructura y continúa."],"answer":"c","explanation":"La estructura 'if-else' funciona así: primero se evalúa la condición del 'if'. Si es verdadera, se ejecuta el bloque de código del 'if'. Si es falsa, el control pasa al bloque 'else' (si está presente) y ese código es el que se ejecuta. Es una bifurcación en el flujo del programa.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Si la condición del 'if' es falsa, el código dentro del 'if' NO se ejecuta. Esa es la base de las condicionales.","b":"El programa no se detiene; simplemente sigue un camino diferente en su ejecución.","d":"El programa no ignora la estructura; evalúa la condición y toma una decisión basada en ella, ejecutando el bloque 'else' si el 'if' es falso."}},{"id":"q5","question":"¿Cuál de los siguientes es un ejemplo de un ciclo que se utiliza para iterar sobre una secuencia (como una lista de números)?","options":["a) if-else","b) for","c) switch","d) print"],"answer":"b","explanation":"El ciclo 'for' está diseñado específicamente para iterar sobre elementos de una secuencia (listas, cadenas, rangos, etc.) o para ejecutar un bloque de código un número predefinido de veces. Es muy común para procesar colecciones de datos.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"if-else es una estructura condicional para tomar decisiones, no un ciclo para iterar.","c":"switch (o match en algunas lenguajes) es una estructura condicional para múltiples casos, no un ciclo para iterar sobre secuencias.","d":"print es una función para mostrar salida, no una estructura de control para ciclos o condicionales."}}]