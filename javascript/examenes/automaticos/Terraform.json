[{"id":"q1","question":"¿Cuál es el propósito principal de Terraform?","options":["a) Gestionar contenedores Docker","b) Describir y aprovisionar infraestructura como código","c) Monitorizar el rendimiento de la red","d) Automatizar despliegues de software en servidores"],"answer":"b","explanation":"Terraform es una herramienta de Infraestructura como Código (IaC) que permite definir recursos de infraestructura en archivos de configuración declarativos y luego aprovisionarlos y gestionarlos en diversas plataformas de nube o locales.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Gestionar contenedores Docker es una función de herramientas como Docker Compose o Kubernetes, no el propósito principal de Terraform.","c":"Monitorizar el rendimiento de la red es una tarea para herramientas de monitoreo, no para Terraform, que se enfoca en el aprovisionamiento.","d":"Automatizar despliegues de software es más el dominio de herramientas de CI/CD o gestión de configuración como Ansible, no el objetivo principal de Terraform."}},{"id":"q2","question":"¿Qué tipo de archivos se utilizan para escribir configuraciones de Terraform?","options":["a) YAML (.yaml)","b) JSON (.json)","c) HCL (HashiCorp Configuration Language) (.tf)","d) XML (.xml)"],"answer":"c","explanation":"Terraform utiliza principalmente HCL (HashiCorp Configuration Language) para sus archivos de configuración, que se identifican con la extensión .tf. HCL es un lenguaje declarativo diseñado para ser legible por humanos.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Aunque algunas herramientas de infraestructura usan YAML, HCL es el lenguaje nativo y preferido de Terraform.","b":"Terraform puede consumir JSON para configuraciones complejas, pero el formato principal y más común para escribir configuraciones es HCL.","d":"XML no es un formato de archivo utilizado comúnmente para las configuraciones de Terraform."}},{"id":"q3","question":"¿Qué comando de Terraform se utiliza para inicializar un directorio de trabajo y descargar los plugins de proveedor necesarios?","options":["a) terraform apply","b) terraform plan","c) terraform init","d) terraform destroy"],"answer":"c","explanation":"El comando `terraform init` es el primer comando que se debe ejecutar en un nuevo directorio de trabajo de Terraform. Inicializa el backend, descarga los proveedores necesarios y configura el entorno de trabajo.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"`terraform apply` se utiliza para aplicar los cambios de infraestructura definidos en la configuración.","b":"`terraform plan` se utiliza para generar un plan de ejecución que muestra qué acciones realizará Terraform sin aplicar los cambios.","d":"`terraform destroy` se utiliza para destruir toda la infraestructura gestionada por la configuración de Terraform."}},{"id":"q4","question":"¿Qué representa un 'proveedor' (provider) en Terraform?","options":["a) Una herramienta para monitorizar el estado de la infraestructura.","b) Un plugin que permite a Terraform interactuar con una API de un servicio en la nube o local.","c) Un tipo de recurso que se puede crear en Terraform.","d) Un lenguaje de programación utilizado para extender Terraform."],"answer":"b","explanation":"Un proveedor en Terraform es un plugin que permite a Terraform interactuar con una API de un servicio en la nube (como AWS, Azure, GCP) o un servicio local (como vSphere, Kubernetes) para crear, actualizar y eliminar recursos.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"Un proveedor no es una herramienta de monitoreo, sino un conector para gestionar la infraestructura.","c":"Un proveedor habilita la creación de recursos, pero no es un recurso en sí mismo; es la capa de abstracción entre Terraform y los servicios de infraestructura.","d":"Los proveedores están escritos en lenguajes como Go, pero no son lenguajes de programación para extender Terraform; son componentes binarios precompilados."}},{"id":"q5","question":"¿Cuál es la función del comando `terraform plan`?","options":["a) Desplegar la infraestructura inmediatamente.","b) Destruir la infraestructura existente.","c) Mostrar un plan de ejecución que detalla los cambios que Terraform realizará.","d) Inicializar el directorio de trabajo de Terraform."],"answer":"c","explanation":"El comando `terraform plan` genera un plan de ejecución. Este plan es un resumen de las acciones que Terraform realizará para alcanzar el estado deseado definido en la configuración, sin aplicar realmente esos cambios. Es útil para revisar los cambios antes de aplicarlos.","difficulty":"principiante","category":"Generated","invalidOptions":{"a":"El comando para desplegar la infraestructura es `terraform apply`.","b":"El comando para destruir la infraestructura es `terraform destroy`.","d":"El comando para inicializar el directorio de trabajo es `terraform init`."}}]